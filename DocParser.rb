#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'

require './StringParser'

class DocParser < Racc::Parser

module_eval(<<'...end DocParser.y/module_eval...', 'DocParser.y', 89)
  def parse(str)
    @sc = DataDocument::StringParser::Scanner.new(str)
    do_parse()
  end

  def next_token()
    @sc.popToken
  end
...end DocParser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    59,    74,    74,     7,     8,    79,     8,     8,    29,    41,
    61,    78,     9,    20,     8,    47,    48,    49,    50,    51,
    52,    53,    54,    55,    56,    57,    58,    75,    75,    38,
    39,    40,    69,    68,    13,    25,    26,    27,    28,    17,
    30,    31,    35,    16,    18,    43,    15,    14,    63,    65,
    66,    67,    13,    71,    10,    77,     2,    80,    81,    82,
    83,    84,    85,     6,    87 ]

racc_action_check = [
    37,    81,    65,     5,    44,    71,     5,    32,    22,    33,
    44,    71,     5,    14,    22,    37,    37,    37,    37,    37,
    37,    37,    37,    37,    37,    37,    37,    81,    65,    32,
    32,    32,    63,    63,    17,    18,    19,    20,    21,    12,
    23,    25,    29,    11,    13,    35,    10,     9,    45,    46,
    61,    62,     8,    64,     7,    70,     1,    72,    73,    74,
    75,    76,    79,     2,    82 ]

racc_action_pointer = [
   nil,    56,    63,   nil,   nil,    -2,   nil,    52,    50,    45,
    40,    34,    29,    33,    -2,   nil,   nil,    32,    33,    30,
    35,    31,     6,    30,   nil,    29,   nil,   nil,   nil,    29,
   nil,   nil,    -1,     2,   nil,    42,   nil,    -2,   nil,   nil,
   nil,   nil,   nil,   nil,    -4,    35,    38,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    44,    35,    30,    45,    -1,   nil,   nil,   nil,   nil,
    53,     2,    45,    48,    30,    57,    54,   nil,   nil,    53,
   nil,    -2,    61,   nil,   nil,   nil,   nil,   nil ]

racc_action_default = [
    -1,    -5,   -52,    -2,    -3,   -52,    88,   -52,   -52,   -52,
   -52,   -52,    -7,   -52,   -14,    -5,    -6,   -52,   -52,   -52,
   -52,   -52,   -52,   -10,    -8,   -52,    -5,   -15,    -4,   -52,
    -5,    -9,   -52,    -5,   -16,   -52,   -11,    -5,   -49,   -50,
   -51,   -13,   -17,   -12,   -52,   -46,   -35,   -20,   -21,   -22,
   -23,   -24,   -25,   -26,   -27,   -28,   -29,   -30,   -31,   -32,
   -33,   -52,   -52,   -52,   -43,   -52,    -5,   -18,   -47,   -48,
   -52,   -52,   -52,   -37,   -42,   -52,    -5,   -19,   -44,   -52,
   -36,   -52,   -40,   -41,   -34,   -45,   -38,   -39 ]

racc_goto_table = [
    42,    33,     5,    72,    11,    21,    45,     4,     3,    37,
    19,    62,    46,    24,    64,    70,    22,    60,     1,    86,
    36,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    22,   nil,   nil,   nil,   nil,   nil,   nil,    44,   nil,
   nil,    76,   nil,    42 ]

racc_goto_check = [
    11,    10,     4,    19,     6,     5,    13,     3,     2,    12,
     9,    14,    15,     6,    16,    17,     4,    18,     1,    19,
     5,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     4,   nil,   nil,   nil,   nil,   nil,   nil,     4,   nil,
   nil,    10,   nil,    11 ]

racc_goto_pointer = [
   nil,    18,     7,     6,     1,   -10,    -4,   nil,   nil,    -4,
   -25,   -33,   -23,   -31,   -34,   -25,   -32,   -49,   -20,   -62,
   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,    32,   nil,   nil,    12,    23,   nil,
   nil,    34,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    73 ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 34, :_reduce_none,
  2, 34, :_reduce_none,
  2, 34, :_reduce_none,
  6, 35, :_reduce_4,
  0, 37, :_reduce_5,
  4, 37, :_reduce_6,
  1, 39, :_reduce_7,
  3, 39, :_reduce_8,
  4, 40, :_reduce_9,
  1, 38, :_reduce_10,
  3, 38, :_reduce_11,
  4, 41, :_reduce_12,
  7, 36, :_reduce_13,
  0, 42, :_reduce_14,
  2, 42, :_reduce_15,
  1, 43, :_reduce_16,
  2, 43, :_reduce_17,
  5, 44, :_reduce_18,
  4, 46, :_reduce_19,
  1, 48, :_reduce_20,
  1, 48, :_reduce_21,
  1, 48, :_reduce_22,
  1, 48, :_reduce_23,
  1, 48, :_reduce_24,
  1, 48, :_reduce_25,
  1, 48, :_reduce_26,
  1, 48, :_reduce_27,
  1, 48, :_reduce_28,
  1, 48, :_reduce_29,
  1, 48, :_reduce_30,
  1, 48, :_reduce_31,
  1, 48, :_reduce_32,
  1, 48, :_reduce_33,
  5, 51, :_reduce_34,
  0, 49, :_reduce_35,
  3, 49, :_reduce_36,
  1, 52, :_reduce_37,
  3, 52, :_reduce_38,
  3, 53, :_reduce_39,
  2, 53, :_reduce_40,
  2, 53, :_reduce_41,
  1, 53, :_reduce_42,
  0, 50, :_reduce_43,
  2, 50, :_reduce_44,
  3, 50, :_reduce_45,
  0, 47, :_reduce_46,
  2, 47, :_reduce_47,
  2, 47, :_reduce_48,
  1, 45, :_reduce_49,
  1, 45, :_reduce_50,
  1, 45, :_reduce_51 ]

racc_reduce_n = 52

racc_shift_n = 88

racc_token_table = {
  false => 0,
  :error => 1,
  :NAME => 2,
  :NUMBER => 3,
  :ATTRIBUTE => 4,
  "enum" => 5,
  "{" => 6,
  "}" => 7,
  "[" => 8,
  "]" => 9,
  "," => 10,
  "(" => 11,
  ")" => 12,
  "=" => 13,
  "struct" => 14,
  ":" => 15,
  ";" => 16,
  "int64" => 17,
  "int32" => 18,
  "int16" => 19,
  "int8" => 20,
  "uint64" => 21,
  "uint32" => 22,
  "uint16" => 23,
  "uint8" => 24,
  "bool" => 25,
  "float" => 26,
  "double" => 27,
  "string" => 28,
  ".." => 29,
  "required" => 30,
  "optional" => 31,
  "reserved" => 32 }

racc_nt_base = 33

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "NAME",
  "NUMBER",
  "ATTRIBUTE",
  "\"enum\"",
  "\"{\"",
  "\"}\"",
  "\"[\"",
  "\"]\"",
  "\",\"",
  "\"(\"",
  "\")\"",
  "\"=\"",
  "\"struct\"",
  "\":\"",
  "\";\"",
  "\"int64\"",
  "\"int32\"",
  "\"int16\"",
  "\"int8\"",
  "\"uint64\"",
  "\"uint32\"",
  "\"uint16\"",
  "\"uint8\"",
  "\"bool\"",
  "\"float\"",
  "\"double\"",
  "\"string\"",
  "\"..\"",
  "\"required\"",
  "\"optional\"",
  "\"reserved\"",
  "$start",
  "expr",
  "enum",
  "struct",
  "attribute",
  "enum_decl",
  "attr_decl",
  "each_attr_decl",
  "each_enum_decl",
  "base_struct",
  "struct_decl",
  "each_struct_decl",
  "data_option",
  "data_define",
  "default_value_define",
  "type_define",
  "condition_define",
  "array_define",
  "unnamed_struct",
  "condition_decl",
  "each_condition_decl" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

module_eval(<<'.,.,', 'DocParser.y', 11)
  def _reduce_4(val, _values, result)
     result = DataDocument::ParseResult::Enum.new(val[0], val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 13)
  def _reduce_5(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 14)
  def _reduce_6(val, _values, result)
     result = val[0] + val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 16)
  def _reduce_7(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 17)
  def _reduce_8(val, _values, result)
     val[2].insert(0, val[0]); result = val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 19)
  def _reduce_9(val, _values, result)
     result = val[0] + '=' + val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 21)
  def _reduce_10(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 22)
  def _reduce_11(val, _values, result)
     val[2].insert(0, val[0]); result = val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 25)
  def _reduce_12(val, _values, result)
     result = DataDocument::ParseResult::EnumElement.new(val[0], val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 28)
  def _reduce_13(val, _values, result)
     result = DataDocument::ParseResult::Struct.new(val[0], val[2], val[3], val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 30)
  def _reduce_14(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 31)
  def _reduce_15(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 33)
  def _reduce_16(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 34)
  def _reduce_17(val, _values, result)
     val[0].push(val[1]); result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 37)
  def _reduce_18(val, _values, result)
     result = DataDocument::ParseResult::StructElement.new(val[0], val[1], val[2][0], val[2][1], val[2][2], val[2][3], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 40)
  def _reduce_19(val, _values, result)
     result = [val[0], val[1], val[2], val[3]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 42)
  def _reduce_20(val, _values, result)
     result = DataDocument::ParseResult::DataType::INT64 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 43)
  def _reduce_21(val, _values, result)
     result = DataDocument::ParseResult::DataType::INT32 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 44)
  def _reduce_22(val, _values, result)
     result = DataDocument::ParseResult::DataType::INT16 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 45)
  def _reduce_23(val, _values, result)
     result = DataDocument::ParseResult::DataType::INT8 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 46)
  def _reduce_24(val, _values, result)
     result = DataDocument::ParseResult::DataType::UINT64 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 47)
  def _reduce_25(val, _values, result)
     result = DataDocument::ParseResult::DataType::UINT32 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 48)
  def _reduce_26(val, _values, result)
     result = DataDocument::ParseResult::DataType::UINT16 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 49)
  def _reduce_27(val, _values, result)
     result = DataDocument::ParseResult::DataType::UINT8 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 50)
  def _reduce_28(val, _values, result)
     result = DataDocument::ParseResult::DataType::BOOL 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 51)
  def _reduce_29(val, _values, result)
     result = DataDocument::ParseResult::DataType::FLOAT 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 52)
  def _reduce_30(val, _values, result)
     result = DataDocument::ParseResult::DataType::DOUBLE 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 53)
  def _reduce_31(val, _values, result)
     result = DataDocument::ParseResult::DataType::STRING 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 54)
  def _reduce_32(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 55)
  def _reduce_33(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 58)
  def _reduce_34(val, _values, result)
     result = DataDocument::ParseResult::Struct.new(val[0], 'unnamed', nil, val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 60)
  def _reduce_35(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 61)
  def _reduce_36(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 63)
  def _reduce_37(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 64)
  def _reduce_38(val, _values, result)
     val[2].insert(0, val[0]); result = val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 66)
  def _reduce_39(val, _values, result)
     result = val[0].to_s + '..' + val[2].to_s 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 67)
  def _reduce_40(val, _values, result)
     result = val[0].to_s + '..Max' 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 68)
  def _reduce_41(val, _values, result)
     result = '0..' + val[1].to_s 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 69)
  def _reduce_42(val, _values, result)
     result = val[0].to_s + '..' + val[0].to_s 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 71)
  def _reduce_43(val, _values, result)
     result = 1 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 72)
  def _reduce_44(val, _values, result)
     result = -1 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 73)
  def _reduce_45(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 75)
  def _reduce_46(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 76)
  def _reduce_47(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 77)
  def _reduce_48(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 79)
  def _reduce_49(val, _values, result)
     result = DataDocument::ParseResult::OptionType::REQUIRED 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 80)
  def _reduce_50(val, _values, result)
     result = DataDocument::ParseResult::OptionType::OPTIONAL 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 81)
  def _reduce_51(val, _values, result)
     result = DataDocument::ParseResult::OptionType::RESERVED 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class DocParser
